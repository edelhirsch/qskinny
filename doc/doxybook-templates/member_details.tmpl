{% if kind in ["function", "slot", "signal", "event"] -%}
```cpp
{% if exists("templateParams") -%}
template <{% for param in templateParams %}{{param.typePlain}} {{param.name}}{% if existsIn(param, "defvalPlain") %} ={{param.defvalPlain}}{% endif -%}
{% if not loop.is_last %},
{% endif %}{% endfor %}>
{% endif -%}

{% if static %}static {% endif -%}
{% if inline %}inline {% endif -%}
{% if explicit %}explicit {% endif -%}
{% if virtual %}virtual {% endif -%}

{% if exists("typePlain") %}{{typePlain}} {% endif %}{{name}}{% if length(params) > 0 -%}
({% for param in params %} {{param.typePlain}} {{param.name}}{% if existsIn(param, "defvalPlain") %} = {{param.defvalPlain}}{% endif -%}
{% if not loop.is_last %},{% endif %} {% endfor -%}){% else -%} (){% endif -%}

{% if const %} const{% endif -%}
{% if override %} override{% endif -%}
{% if default %} = default{% endif -%}
{% if deleted %} = deleted{% endif -%}
{% if pureVirtual %} = 0{% endif %}
```{% endif -%}

{% if kind == "enum" -%}
{% for enumvalue in enumvalues %}
| Enumerator | Value |
| ---------- | ----- |
| **{{enumvalue.name}}** | {% if existsIn(enumvalue, "initializer") -%}
{{replace(enumvalue.initializer, "= ", "")}}{% endif -%}
{% if existsIn(enumvalue, "brief") %}
{{enumvalue.brief}}{% endif %}

{% if existsIn(enumvalue, "details") %}{{enumvalue.details}}{% endif %}

{% if existsIn(enumvalue, "see") -%}
**See also**: {% if length(enumvalue.see) == 1 %}{{first(enumvalue.see)}}{% else %}

{% for item in enumvalue.see %}  * {{item}}
{% endfor %}{% endif %}

{% endif -%}

{% if existsIn(enumvalue, "note") -%}
**Note**: {% if length(enumvalue.note) == 1 %}{{first(enumvalue.note)}}{% else %}

{% for item in enumvalue.note %}  * {{item}}
{% endfor %}{% endif %}
{% endif -%}

{% endfor %}
{% endif -%}

{% if kind in ["variable", "property"] -%}
```cpp
{% if static %}static {% endif -%}
{% if exists("typePlain") %}{{typePlain}} {% endif -%}{{name}}{% if exists("initializer") %} {{initializer}}{% endif %};
```{% endif -%}

{% if kind == "typedef" -%}
```cpp
{{definition}};
```{% endif -%}

{% if kind == "using" -%}
```cpp
{% if exists("templateParams") -%}
template <{% for param in templateParams %}{{param.typePlain}} {{param.name}}{% if existsIn(param, "defvalPlain") %} ={{param.defvalPlain}}{% endif -%}
{% if not loop.is_last %},
{% endif %}{% endfor %}>
{% endif -%}
{{definition}};
```{% endif -%}

{% if kind == "friend" -%}
```cpp
friend {% if exists("typePlain") %}{{typePlain}} {% endif -%}
{{name}}{% if exists("params") %}{% endif -%}
{% if length(params) > 0 -%}
(
{% for param in params %}    {{param.typePlain}} {{param.name}}{% if existsIn(param, "defvalPlain") %} ={{param.defvalPlain}}{% endif -%}
{% if not loop.is_last %},
{% endif %}
{% endfor -%}
){% else if typePlain != "class" -%}
(){% endif %};
```{% endif -%}

{% if kind == "define" -%}
```cpp
#define {{name}}{% if exists("params") -%}
(
{% for param in params %}    {{param.name}}{% if existsIn(param, "defvalPlain") %} ={{param.defvalPlain}}{% endif -%}
{% if not loop.is_last %},
{% endif -%}
{% endfor %}
)
{% else %} {% endif -%}
{% if exists("initializer") %}{{initializer}}{% endif %}
```{% endif %}

{% include "details" -%}